# ===================================================================
# FICHIER D'EXEMPLE POUR LES VARIABLES D'ENVIRONNEMENT - BACKEND
# Ne committez jamais de secrets dans les fichiers .env
# ===================================================================

# -------------------------------------
# Base de données
# -------------------------------------
# URL de connexion pour la base de données principale (développement, production)
DATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE"

# URL de connexion pour la base de données de test (utilisée par les scripts de test)
DATABASE_URL_TEST="postgresql://USER:PASSWORD@HOST:PORT/DATABASE_TEST"

# -------------------------------------
# Authentification et JWT
# ----------------------# Clé secrète pour signer les access tokens JWT (256-bit minimum - 128 hex chars)
# Générer avec: openssl rand -hex 64
# OU: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET="aaff730625562e43ea8720952fd5b08bc27926d45633410b0a998c9b907a143327a0f46144818fd7c25ca9e57c0c11e0a63a409ebd8be60454339f54d27c54a0"

# Clé secrète pour signer les refresh tokens JWT (256-bit minimum - 128 hex chars)
# Générer avec: openssl rand -hex 64
JWT_REFRESH_SECRET="f78e742fc66861473c300a470ad9e1b095513946c92ac473e324a42ce2b87dd929397f63269e886f23b4642ff1b8e8b8b00b4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d"

# Durée de vie des access tokens (recommandé: 15m)
JWT_EXPIRES_IN="15m"

# Durée de vie des refresh tokens (recommandé: 7d)
JWT_REFRESH_EXPIRES_IN="7d"

# Secret pour les sessions (générer avec: openssl rand -hex 64)
SESSION_SECRET="generate_a_strong_session_secret_here_min_64_chars_required_use_openssl_rand_hex_64"_a_strong_session_secret_here"

# -------------------------------------
# Configuration du serveur
# -------------------------------------
PORT=3001
NODE_ENV=development
FRONTEND_URL="http://localhost:3000"

# -------------------------------------
# Services externes
# -------------------------------------
# Stripe (paiements)
STRIPE_SECRET_KEY="sk_test_remplacer_par_votre_cle_secrete_stripe"
STRIPE_WEBHOOK_SECRET="whsec_remplacer_par_votre_secret_webhook_stripe"

# Google OAuth
GOOGLE_CLIENT_ID="remplacer_par_votre_google_client_id"
GOOGLE_CLIENT_SECRET="remplacer_par_votre_google_client_secret"

# AWS S3/Cloudflare R2 (stockage fichiers)
R2_ACCESS_KEY_ID="remplacer_par_votre_access_key_id"
R2_SECRET_ACCESS_KEY="remplacer_par_votre_secret_access_key"
R2_BUCKET_NAME="remplacer_par_le_nom_de_votre_bucket"
R2_ACCOUNT_ID="remplacer_par_votre_account_id"
R2_PUBLIC_URL="remplacer_par_l_url_publique_de_votre_bucket"

# -------------------------------------
# Configuration Email (SMTP)
# -------------------------------------
SMTP_HOST="smtp.example.com"
SMTP_PORT=587
SMTP_USER="user@example.com"
SMTP_PASS="remplacer_par_le_mot_de_passe_smtp"
FROM_EMAIL="noreply@votredomaine.com"